#! /usr/bin/env python
# -*- coding: utf-8 -*-

# @Author: ${CREATE_BY}
# @Time: ${CREATE_TIME}
# @File: ${table}_mysql.py

from lib.common.error import ${Table}ErrorType,CommonError
from lib.common.aliyun_mysql import mysql_rds
from lib.model.model import ${Table}


def add_${table}(data_obj):
    code = mysql_rds.add(data_obj=data_obj)
    if code == -1:
        raise CommonError(${Table}ErrorType.${TABLE}_ADD_ERROR.value)


def bulk_add_${table}(data_list):
    code = mysql_rds.bulk_insert(table=${Table}, data_list=data_list)
    if code == -1:
        raise CommonError(${Table}ErrorType.${TABLE}_BULK_ADD_ERROR.value)


def delete_${table}(filters):
    code = mysql_rds.delete(table=${Table}, filters=filters)
    if code == -1:
        raise CommonError(${Table}ErrorType.${TABLE}_DELETE_ERROR.value)


def update_${table}(filters, data_dict):
    code = mysql_rds.update(table=${Table}, filters=filters, data_dict=data_dict)
    if code == -1:
        raise CommonError(${Table}ErrorType.${TABLE}_UPDATE_ERROR.value)


def bulk_update_${table}(data_list):
    code = mysql_rds.bulk_update(table=${Table}, data_list=data_list)
    if code == -1:
        raise CommonError(${Table}ErrorType.${TABLE}_BULK_UPDATE_ERROR.value)


def get_${table}(query_list=[], join=[], join_two=[], join_three=[], filters=[], group_by=[], order_by=[]):
    return mysql_rds.find_one(query_list=query_list, join=join, join_two=join_two, join_three=join_three, filters=filters, group_by=group_by ,order_by=order_by)


def get_${table}_list(query_list=[], join=[], join_two=[], join_three=[], outerjoin=[], filters=[], group_by=[], having=[], order_by=[], limit=0, offset=0):
    return mysql_rds.find_list(query_list=query_list, join=join, join_two=join_two, join_three=join_three,
                               outerjoin=outerjoin, filters=filters, group_by=group_by, having=having, order_by=order_by,
                               limit=limit,
                               offset=offset)


def get_${table}_list_count(query_list=[], join=[], join_two=[], join_three=[], outerjoin=[], filters=[], group_by=[], having=[],
                        order_by=[]):
    return mysql_rds.count(query_list=query_list, join=join, join_two=join_two, join_three=join_three,
                           outerjoin=outerjoin, filters=filters, group_by=group_by, having=having, order_by=order_by)


def sql_execute(sql_str):
    return mysql_rds.sql_execute(sql_str=sql_str)


# 子查询 慎用
def get_${table}_subquery(query_list=[], join=[], join_two=[], join_three=[], outerjoin=[], filters=[]):
    return mysql_rds.subquery(query_list=query_list, join=join, join_two=join_two, outerjoin=outerjoin,
                              join_three=join_three,
                              filters=filters)
