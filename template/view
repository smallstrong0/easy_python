#! /usr/bin/env python
# -*- coding: utf-8 -*-

# @Author: ${CREATE_BY}
# @Time: ${CREATE_TIME}
# @File: ${table}.py


import lib.dap.${table}
import lib.common.func as com_func
from handler.base import BaseHandler
from tornado import gen


class ${Table}ListHandler(BaseHandler):
    def post(self):
        """
        @api {POST} /${module}/${func}/list   ${table_name}列表
        @apiGroup ${module}
        @apiVersion  ${version}


        @apiParam {Int} page  页码
        @apiParam {Int} pagesize  每页多少条

        @apiSuccessExample {json} Request Example
        {
            "user_id": 1789900001,
            "page": 1,
            "pagesize": 10,
        }

        @apiSuccessExample  {json} Response-Example
        {
            "code": 0,
            "data": {
                "data_list": [
                    {
                    }
                ],
                "total_page": 2,
                "page": 1,
                "total_count": 15,
                "has_next": true
            }
        }
        """
        keys = {
            'user_id': None,
            'ts': None,
            'nonce': None,
            "page": 1,
            "pagesize": 10,
        }
        params, error = com_func.get_params_verify_sig(self.request, keys)
        if error is None:
            error, data = lib.dap.${table}.get_${table}_list(params)
            self.write_json(error, data)
        else:
            self.write_json(error)


class ${Table}Handler(BaseHandler):
    @gen.coroutine
    def post(self):
        """
        @api {POST} /${module}/${func}  ${table_name}添加
        @apiGroup ${module}
        @apiVersion  ${version}


        @apiParam {Int} user_id  用户ID


        @apiSuccessExample {json} Request Example
        {
            "user_id": 1789900001,
        }
        @apiSuccessExample  {json} Response-Example
        {
            "code": 0,
            "data": {}
        }
        """
        keys = {
            'user_id': None,
            'ts': None,
            'nonce': None,
        }
        params, error = com_func.get_params_verify_sig(self.request, keys)
        if error is None:
            error, data = lib.dap.${table}.add_${table}(params)
            self.write_json(error, data)
        else:
            self.write_json(error)

    @gen.coroutine
    def put(self):
        """
        @api {PUT} /${module}/${func}  ${table_name}修改
        @apiGroup ${module}
        @apiVersion  ${version}


        @apiParam {Int} user_id  用户ID

        @apiSuccessExample {json} Request Example
        {
            "user_id": 1789900001,
        }
        @apiSuccessExample  {json} Response-Example
        {
            "code":0,
            "data": {}
        }
        """
        keys = {
            'user_id': None,
            'ts': None,
            'nonce': None,
        }
        params, error = com_func.get_params_verify_sig(self.request, keys)
        if error is None:
            error, data = lib.dap.${table}.update_${table}(params)
            self.write_json(error, data)
        else:
            self.write_json(error)

    @gen.coroutine
    def delete(self):
        """
        @api {DELETE} /${module}/${func}  ${table_name}删除
        @apiGroup ${module}
        @apiVersion  ${version}


        @apiParam {Int} user_id  用户ID

        @apiSuccessExample {json} Request Example
        {
            "user_id": 1789900001,
        }
        @apiSuccessExample  {json} Response-Example
        {
            "code":0,
            "data": {}
        }
        """
        keys = {
            'user_id': None,
            'ts': None,
            'nonce': None,
        }
        params, error = com_func.get_params_verify_sig(self.request, keys)
        if error is None:
            error, data = lib.dap.${table}.delete_${table}(params)
            self.write_json(error, data)
        else:
            self.write_json(error)

    @gen.coroutine
    def get(self):
        """
        @api {GET} /${module}/${func}  ${table_name}详情
        @apiGroup ${module}
        @apiVersion  ${version}


        @apiParam {Int} user_id  用户ID


        @apiSuccessExample {json} Request Example
        {
            "user_id": 1789900001,
        }
        @apiSuccessExample  {json} Response-Example
        {
            "code": 0,
            "data": {
            }
        }
        """
        keys = {
            'user_id': None,
            'ts': None,
            'nonce': None,
        }
        params, error = com_func.get_params_verify_sig(self.request, keys)
        if error is None:
            error, data = lib.dap.${table}.get_${table}(params)
            self.write_json(error, data)
        else:
            self.write_json(error)
